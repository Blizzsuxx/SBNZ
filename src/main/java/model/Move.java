/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package model;

import java.util.ArrayList;

public class Move {
	private Move movesOnKill;
	private Piece piece;
	private Tile tileTo;
	private Tile tileFrom;
	public Move getMovesOnKill() {
		return movesOnKill;
	}
	
	public Move(Move move) {
		this.tileFrom = move.tileFrom;
		this.tileTo = move.tileTo;
		this.piece = move.piece;
		this.movesOnKill = move.movesOnKill;
	}
	
	public Move() {
		
	}
	
	
	public Piece getPiece() {
		return piece;
	}
	public Tile getTileTo() {
		ArrayList<String> s = new ArrayList<String>();
		return tileTo;
	}
	public Move setMovesOnKill(Move movesOnKill) {
		this.movesOnKill = movesOnKill;
		return this;
	}
	public Move setPiece(Piece piece) {
		this.piece = piece;
		return this;
	}
	public void setTileTo(Tile tile) {
		this.tileTo = tile;
	}

	public void setTileTo(int x, int y) {
		this.tileTo = Game.getInstance().getBoard().getTile(x, y);
	}
	public Move linkMovesOnKill(Move _movesOnKill) {
		setMovesOnKill(_movesOnKill);
		return this;
	}
	public Move linkPiece(Piece _piece) {
		setPiece(_piece);
		return this;
	}
	public Move linkTileTo(Tile _tile) {
		setTileTo(_tile);
		return this;
	}
	public Move unlinkMovesOnKill() {
		setMovesOnKill(null);
		return this;
	}
	public Move unlinkPiece() {
		setPiece(null);
		return this;
	}
	public Move unlinkTileTo() {
		setTileTo(null);
		return this;
	}
	public void execute() {
//		System.out.println("******************************");
//		System.out.println("******************************");
//		System.out.println(Game.getInstance().getBoard().toString());
//		
//		
//		System.out.println("******************************");
		System.out.println(this);
//		if(this.piece instanceof Necromobile) {
//			System.out.println("AAA");
//		}
		
		
		if(this.tileTo != null && this.tileTo.getPiece() != null && !(this.piece instanceof Diplomat)) {
			this.tileTo.getPiece().setDead(true);
			if( this.tileTo.getPiece() instanceof Chief) {
				
			}
		}
		
		
		if(this.tileTo != null && this.piece != null)		this.piece.setTile(this.tileTo);
		if(this.tileFrom != null && this.tileFrom.getPiece().equals(this.piece))	this.tileFrom.setPiece(null);
		if(this.tileTo != null)		this.tileTo.setPiece(this.piece);
		
		if(this.movesOnKill != null) {
			this.movesOnKill.execute();
		}
//		
//		System.out.println(Game.getInstance().getBoard().toString());
//		System.out.println("******************************");
//		System.out.println("******************************");
	}
	public void undo() {
//		System.out.println("******************************");
//		System.out.println("******************************");
//		System.out.println(Game.getInstance().getBoard().toString());
//		
//		System.out.println("******************************");
		if(this.tileFrom != null && this.piece != null)	this.piece.setTile(this.tileFrom);
		if(this.tileTo != null && this.tileTo.getPiece() != null  && this.tileTo.getPiece().equals(this.piece))	this.tileTo.setPiece(null);
		if(this.tileFrom != null)	this.tileFrom.setPiece(this.piece);
		if(this.movesOnKill != null) {
			this.movesOnKill.undo();
			if(!(this.piece instanceof Necromobile)) {
				this.movesOnKill.getPiece().setDead(false);
			}
			
		}
		
//		System.out.println(Game.getInstance().getBoard().toString());
//		System.out.println("******************************");
//		System.out.println("******************************");
		
	}
	public Tile getTileFrom() {
		return tileFrom;

	}
	public void setTileFrom(Tile tileFrom) {
		this.tileFrom = tileFrom;

	}

	public void setTileFrom(int x, int y) {
		this.tileFrom = Game.getInstance().getBoard().getTile(x, y);
	}
	@Override
	public String toString() {
		return "Move [movesOnKill=" + movesOnKill + ", piece=" + piece + ", tileTo=" + tileTo + ", tileFrom=" + tileFrom
				+ "]";
	}


}