/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package model;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;


public class Game {
	
	private static Game instance = null;
	
	private int aiDepth = 3;
	private List<Player> players = new ArrayList<>();
	private Board board;
	
	public static Game getInstance() {
		if(instance == null) {
			instance = new Game();
		}
		return instance;
	}
	private Game() {
		instance = this;
		this.board = new Board();
		this.players.add( new Player(0, 0));
		this.players.add( new Player(this.board.getColumnCount()-1, 0));
		this.players.add( new Player(0, this.board.getRowCount()-1));
		this.players.add( new Player(this.board.getColumnCount()-1, this.board.getRowCount()-1));
		
	}
	
	
	public int getAiDepth() {
		return aiDepth;
	}
	public List<Player> getPlayers() {
		return players;
	}
	public Board getBoard() {
		return board;
	}
	public Game setAiDepth(int aiDepth) {
		this.aiDepth = aiDepth;
		return this;
	}
	public Game setBoard(Board board) {
		this.board = board;
		return this;
	}
	public Game linkPlayers(Player _players) {
		if (_players != null) {
			getPlayers().add(_players);
		}
		return this;
	}
	public Game linkBoard(Board _board) {
		setBoard(_board);
		return this;
	}
	public Game unlinkPlayers(Player _players) {
		if (_players != null) {
			getPlayers().remove(_players);
		}
		return this;
	}
	public Game unlinkPlayers(Iterator<Player> it) {
		it.remove();
		return this;
	}
	public Game unlinkBoard() {
		setBoard(null);
		return this;
	}
	
	public Player nextPlayer(Player player) {
		for(int i = 0; i < players.size(); i++) {
			if(players.get(i).equals(player)) {
				return this.getPlayer(i+1);
			}
		}
		return null;
	}
	private Player getPlayer(int i) {
		i = i % players.size();
		return this.players.get(i);
	}
}