/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/
package root;

import java.util.List;


public class Piece extends BoardObject implements Killable {
	private Tile tile;
	private Player player;
	public Tile getTile() {
		return tile;
	}
	public Player getPlayer() {
		return player;
	}
	public Piece setTile(Tile tile) {
		this.tile = tile;
		return this;
	}
	public Piece setPlayer(Player player) {
		this.player = player;
		return this;
	}
	public Piece linkTile(Tile _tile) {
		if (_tile != null) {
			_tile.unlinkPiece();
			_tile.setPiece(this);
		}

		unlinkTile();
		setTile(_tile);
		return this;
	}
	public Piece linkPlayer(Player _player) {
		if (_player != null) {
			_player.getPieces().add(this);
		}

		unlinkPlayer();
		setPlayer(_player);
		return this;
	}
	public Piece unlinkTile() {
		if (getTile() != null) {
			getTile().setPiece(null);
			setTile(null);
		}
		return this;
	}
	public Piece unlinkPlayer() {
		if (getPlayer() != null) {
			getPlayer().getPieces().remove(this);
			setPlayer(null);
		}
		return this;
	}
	@Override
	public boolean isDead() {
		return false;
	}
	public List<Move> getMoves() {
		return null;
	}
	public void captureEvent() {
	}
}